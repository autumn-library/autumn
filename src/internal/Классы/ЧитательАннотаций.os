#Область ОписаниеПеременных

// Поделка - Управляющий ioc-контейнер.
Перем _Поделка;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция ПрочитатьИмяЖелудя(Аннотации, АннотацияНадМетодом, ЗначениеПоУмолчанию) Экспорт

	Аннотация = РаботаСАннотациями.НайтиАннотацию(Аннотации, АннотацияНадМетодом);
	ИмяЖелудя = РаботаСАннотациями.ПолучитьЗначениеПараметраАннотации(Аннотация, , ЗначениеПоУмолчанию);

	Возврат ИмяЖелудя;

КонецФункции

Функция ПрочитатьТипЖелудя(Метод, Аннотации) Экспорт

	Аннотация = РаботаСАннотациями.НайтиАннотацию(Аннотации, "Завязь");
	ТипЖелудя = РаботаСАннотациями.ПолучитьЗначениеПараметраАннотации(
		Аннотация,
		"Тип"
	);

	Если ТипЖелудя = Неопределено Тогда
		ТипЖелудя = Метод.Имя;
	КонецЕсли;

	Попытка
		РеальныйТип = Тип(ТипЖелудя);
	Исключение
		ВызватьИсключение СтрШаблон(
			"Тип желудя в Завязи %1 не известен. Укажите тип желудя в аннотации или переименуйте метод завязи.",
			Метод.Имя
		);
	КонецПопытки;

	Возврат РеальныйТип;
КонецФункции

Функция ПрочитатьХарактерЖелудя(Аннотации) Экспорт
	ЗначениеПоУмолчанию = ХарактерыЖелудей.Одиночка();

	Аннотация = РаботаСАннотациями.НайтиАннотацию(Аннотации, "Характер");
	Если Аннотация = Неопределено Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;

	ХарактерЖелудя = РаботаСАннотациями.ПолучитьЗначениеПараметраАннотации(
		Аннотация,
		,
		ЗначениеПоУмолчанию
	);

	Если НЕ ХарактерыЖелудей.ЭтоХарактерЖелудя(ХарактерЖелудя) Тогда
		ВызватьИсключение "Неизвестный характер желудя " + ХарактерЖелудя;
	КонецЕсли;

	Возврат ХарактерЖелудя;
КонецФункции

Функция ПрочитатьПрозвища(Аннотации, ЗначениеПоУмолчанию) Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить(ЗначениеПоУмолчанию);
		
	Прозвища = РаботаСАннотациями.НайтиАннотации(Аннотации, "Прозвище");
	Для Каждого Аннотация Из Прозвища Цикл
		Прозвище = РаботаСАннотациями.ПолучитьЗначениеПараметраАннотации(Аннотация);
		
		Результат.Добавить(Прозвище);
	КонецЦикла;

	Возврат Результат;

КонецФункции

Функция ПрочитатьПорядок(Аннотации) Экспорт
	
	Аннотация = РаботаСАннотациями.НайтиАннотацию(Аннотации, "Порядок");

	ОпределениеАннотации = _Поделка.ПолучитьОпределениеАннотации("Порядок");
	ОбъектАннотации = ОпределениеАннотации.СоздатьОбъектАннотации(Аннотация);

	Возврат ОбъектАннотации.Значение();

КонецФункции

Функция ПрочитатьПризнакВерховногоЖелудя(Аннотации) Экспорт

	Возврат РаботаСАннотациями.НайтиАннотацию(Аннотации, "Верховный") <> Неопределено;

КонецФункции

Функция ПрочитатьСпецификацию(Аннотации) Экспорт

	Аннотация = РаботаСАннотациями.НайтиАннотацию(Аннотации, "Спецификация");

	ОпределениеАннотации = _Поделка.ПолучитьОпределениеАннотации("Спецификация");
	ОбъектАннотации = ОпределениеАннотации.СоздатьОбъектАннотации(Аннотация);

	Возврат ОбъектАннотации.Значение();

КонецФункции

Функция ПрочитатьКорневуюАннотацию(Аннотации, ИмяКорневойАннотации) Экспорт

	КорневаяАннотация = РаботаСАннотациями.НайтиАннотацию(Аннотации, ИмяКорневойАннотации);
	ОпределениеАннотации = _Поделка.ПолучитьОпределениеАннотации(КорневаяАннотация.Имя);

	ОбъектАннотации = ОпределениеАннотации.СоздатьОбъектАннотации(КорневаяАннотация);

	Возврат ОбъектАннотации;

КонецФункции

#КонецОбласти

#Область Инициализация

Процедура ПриСозданииОбъекта(пПоделка)
	_Поделка = пПоделка;
КонецПроцедуры

#КонецОбласти